<DataSource
	ID="StatisticsDS"
	serverType="sql"
	tableName="statistic"
	qualifyColumnNames="false"
	dropExtraFields = "false">
	
	<fields>
		<field name="id"						type="integer"		title="id"					hidden="true" primaryKey="true" />
		<field name="ym"						type="integer"		title="ym"					hidden="true"/>
		<field name="stat_date"					type="date"			title="stat_date"/>
		<field name="abonent_cnt"				type="integer"		title="abonent_cnt"/>		
		<field name="abonent_amm"				type="integer"		title="abonent_amm"/>
		<field name="org_contr_comm_cnt"		type="integer"		title="org_contr_comm_cnt"/>
		<field name="org_contr_comm_amm"		type="integer"		title="org_contr_comm_amm"/>
		<field name="org_non_contr_cnt"			type="integer"		title="org_non_contr_cnt"/>
		<field name="org_non_contr_amm"			type="integer"		title="org_non_contr_amm"/>
		<field name="org_contr_gov_cnt"			type="integer"		title="org_contr_gov_cnt"/>
		<field name="org_contr_gov_amm"			type="integer"		title="org_contr_gov_amm"/>
		<field name="magti_cnt"					type="integer"		title="magti_cnt"/>
		<field name="magti_amm"					type="integer"		title="magti_amm"/>
		<field name="geocell_cnt"				type="integer"		title="geocell_cnt"/>
		<field name="geocell_amm"				type="integer"		title="geocell_amm"/>
		<field name="beeline_cnt"				type="integer"		title="beeline_cnt"/>
		<field name="beeline_amm"				type="integer"		title="beeline_amm"/>
		<field name="org_contr_email_srv_cnt"	type="integer"		title="org_contr_email_srv_cnt"/>
		<field name="org_contr_email_srv_amm"	type="integer"		title="org_contr_email_srv_amm"/>
		<field name="org_email_srv_cnt"			type="integer"		title="org_email_srv_cnt"/>
		<field name="org_email_srv_amm"			type="integer"		title="org_email_srv_amm"/>
		<field name="stat_date_start"			type="date"			title="stat_date_start"		hidden="true"/>
		<field name="stat_date_end"				type="date"			title="stat_date_end"		hidden="true"/>
		<field name="week_day"					type="integer"		title="week_day"			hidden="true"/>
		<field name="org_sum"					type="integer"		title="org_sum"/>
		<field name="all_sum"					type="integer"		title="all_sum"/>
		<field name="all_amount"				type="integer"		title="all_amount"/>
		<field name="date_str"					type="text"			title="date_str"/>
		<field name="week_day_descr"			type="text"			title="week_day_descr"/>
		<field name="cnt_percent"				type="integer"		title="cnt_percent"/>
		<field name="free_call_non_contr_cnt"	type="integer"		title="free_call_non_contr_cnt"/>
		<field name="free_call_contr_cnt"		type="integer"		title="free_call_contr_cnt"/>
		<field name="organization_name"			type="text"			title="organization_name"/>
		<field name="call_count"				type="integer"		title="call_count"/>
		<field name="organization_id"			type="integer"		title="organization_id"/>
		<field name="call_date"					type="text"			title="call_date"/>
	</fields>

	<operationBindings>		

    	<operationBinding operationId="searchAllStatistics" operationType="fetch">
    		<selectClause>   			
    			  	t.id,
					t.ym,
					t.stat_date,
					t.abonent_cnt,
					t.abonent_amm,
					t.org_contr_comm_cnt,
					t.org_contr_comm_amm,
					t.org_non_contr_cnt,
					t.org_non_contr_amm,
					t.org_contr_gov_cnt,
					t.org_contr_gov_amm,
					t.magti_cnt,
					t.magti_amm,
					t.geocell_cnt,
					t.geocell_amm,
					t.beeline_cnt,
					t.beeline_amm,
					t.org_contr_email_srv_cnt,
					t.org_contr_email_srv_amm,
					t.org_email_srv_cnt,
					t.org_email_srv_amm,
					t.free_call_non_contr_cnt,
					t.free_call_contr_cnt,
					case when to_number(to_char(t.stat_date,'D')) = 1 or to_number(to_char(t.stat_date,'D')) = 7 then 
				    	1 else 
				    	0 
				   	end as week_day,
				   	(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt) as org_sum,
				   	(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt+abonent_cnt+magti_cnt+geocell_cnt+beeline_cnt+org_contr_email_srv_cnt+org_email_srv_cnt) as all_sum,
				   	(t.org_contr_comm_amm+t.org_non_contr_amm+t.org_contr_gov_amm+abonent_amm+magti_amm+geocell_amm+beeline_amm+org_contr_email_srv_amm+org_email_srv_amm) as all_amount,
				   	date_format(t.stat_date) as date_str,
				   	get_day_of_week(t.stat_date) as week_day_descr				   	
			</selectClause> 
			<tableClause> #if($criteria.exactDate) 
		       (
		       		#foreach($item in $list)
					 $item
					#end
					select * from table(PKG_STATISTICS.getStatisticsTablePipe((trunc(sysdate)-7)+(sysdate-trunc(sysdate)), 0))
		       		    union all
		       		select * from table(PKG_STATISTICS.getStatisticsTablePipe((trunc(sysdate)-6)+(sysdate-trunc(sysdate)), 0))
		       		    union all
		       		select * from table(PKG_STATISTICS.getStatisticsTablePipe((trunc(sysdate)-5)+(sysdate-trunc(sysdate)), 0))
		       		    union all
		       		select * from table(PKG_STATISTICS.getStatisticsTablePipe((trunc(sysdate)-4)+(sysdate-trunc(sysdate)), 0))
		       		    union all
		       		select * from table(PKG_STATISTICS.getStatisticsTablePipe((trunc(sysdate)-3)+(sysdate-trunc(sysdate)), 0))
		       		    union all
		       		select * from table(PKG_STATISTICS.getStatisticsTablePipe((trunc(sysdate)-2)+(sysdate-trunc(sysdate)), 0))
		       			union all
					select * from table(PKG_STATISTICS.getStatisticsTablePipe((trunc(sysdate)-1)+(sysdate-trunc(sysdate)), 0)) 
						union all
					select * from table(PKG_STATISTICS.getStatisticsTablePipe(trunc(sysdate)+(sysdate-trunc(sysdate)), 0)) 
				)
				#else statistic #end t</tableClause>
			<whereClause><![CDATA[
				 1 = 1
				 #if($criteria.exactDate)  and 1=1
				 #else 
					 #if($criteria.ym) and t.ym = $criteria.ym #end
					 #if($criteria.stat_date_start) and trunc(t.stat_date) >= $criteria.stat_date_start #end
					 #if($criteria.stat_date_end) and trunc(t.stat_date) <= $criteria.stat_date_end #end
				 #end				 
				]]>  
			</whereClause> 
			<orderClause>trunc(stat_date)</orderClause>
    	</operationBinding>
    	
    	
    	<operationBinding operationId="searchAllStatisticsByMonth" operationType="fetch">
    		<selectClause>   			
    			  	t.ym,
					sum(t.abonent_cnt) as abonent_cnt,
					sum(t.abonent_amm) as abonent_amm,
					sum(t.org_contr_comm_cnt) as org_contr_comm_cnt,
					sum(t.org_contr_comm_amm) as org_contr_comm_amm,
					sum(t.org_non_contr_cnt) as org_non_contr_cnt,
					sum(t.org_non_contr_amm) as org_non_contr_amm,
					sum(t.org_contr_gov_cnt) as org_contr_gov_cnt,
					sum(t.org_contr_gov_amm) as org_contr_gov_amm,
					sum(t.magti_cnt) as magti_cnt,
					sum(t.magti_amm) as magti_amm,
					sum(t.geocell_cnt) as geocell_cnt,
					sum(t.geocell_amm) as geocell_amm,
					sum(t.beeline_cnt) as beeline_cnt,
					sum(t.beeline_amm) as beeline_amm,
					sum(t.org_contr_email_srv_cnt) as org_contr_email_srv_cnt,
					sum(t.org_contr_email_srv_amm) as org_contr_email_srv_amm,
					sum(t.org_email_srv_cnt) as org_email_srv_cnt,
					sum(t.org_email_srv_amm) as org_email_srv_amm,
					sum(t.free_call_non_contr_cnt) as free_call_non_contr_cnt,
					sum(t.free_call_contr_cnt) as free_call_contr_cnt,
				   	sum(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt) as org_sum,
				   	sum(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt+abonent_cnt+magti_cnt+geocell_cnt+beeline_cnt+org_contr_email_srv_cnt+org_email_srv_cnt) as all_sum,
				   	sum(t.org_contr_comm_amm+t.org_non_contr_amm+t.org_contr_gov_amm+abonent_amm+magti_amm+geocell_amm+beeline_amm+org_contr_email_srv_amm+org_email_srv_amm) as all_amount,
				   	round((sum(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt+abonent_cnt+magti_cnt+geocell_cnt+beeline_cnt+org_contr_email_srv_cnt+org_email_srv_cnt) * 100/
  					decode((LAG((sum(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt+abonent_cnt+magti_cnt+geocell_cnt+beeline_cnt+org_contr_email_srv_cnt+org_email_srv_cnt)), 1, 0) OVER (ORDER BY YM)),0,
  					sum(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt+abonent_cnt+magti_cnt+geocell_cnt+beeline_cnt+org_contr_email_srv_cnt+org_email_srv_cnt),
  					(LAG((sum(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt+abonent_cnt+magti_cnt+geocell_cnt+beeline_cnt+org_contr_email_srv_cnt+org_email_srv_cnt)), 1, 0) OVER (ORDER BY YM))) - 100),2) as cnt_percent				   	
			</selectClause> 
			<tableClause> #if($criteria.exactDate) table(PKG_STATISTICS.getStatisticsTablePipe(trunc(sysdate)+(sysdate-trunc(sysdate)), 0)) #else statistic #end t</tableClause>
			<whereClause><![CDATA[
				 1 = 1
				  #if($criteria.exactDate)  and 1=1
				  #else 
					 #if($criteria.ym) and t.ym = $criteria.ym #end
					 #if($criteria.ym_start) and t.ym >= $criteria.ym_start #end
					 #if($criteria.ym_end) and t.ym <= $criteria.ym_end #end	
				  #end			 
				]]>  
			</whereClause> 
			<groupClause>t.ym</groupClause>
			<orderClause>t.ym</orderClause>
    	</operationBinding>

    	<operationBinding operationId="searchPrevStatisticsByMonth" operationType="fetch">
    		<selectClause>   			
    			  	  t.ym,
			          avg(t.abonent_cnt) as abonent_cnt,
			          avg(t.org_contr_comm_cnt) as org_contr_comm_cnt,
			          avg(t.org_non_contr_cnt) as org_non_contr_cnt,
			          avg(t.org_contr_gov_cnt) as org_contr_gov_cnt,
			          avg(t.magti_cnt) as magti_cnt,
			          avg(t.geocell_cnt) as geocell_cnt,
			          avg(t.beeline_cnt) as beeline_cnt,
			          avg(t.org_contr_email_srv_cnt) as org_contr_email_srv_cnt,
			          avg(t.org_email_srv_cnt) as org_email_srv_cnt,
			          avg(t.free_call_non_contr_cnt) as free_call_non_contr_cnt,
					  avg(t.free_call_contr_cnt) as free_call_contr_cnt,
			          avg(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt) as org_sum,
			          avg(t.org_contr_comm_cnt+t.org_non_contr_cnt+t.org_contr_gov_cnt+abonent_cnt+magti_cnt+geocell_cnt+beeline_cnt+org_contr_email_srv_cnt+org_email_srv_cnt) as all_sum,
			          avg(t.org_contr_comm_amm+t.org_non_contr_amm+t.org_contr_gov_amm+abonent_amm+magti_amm+geocell_amm+beeline_amm+org_contr_email_srv_amm+org_email_srv_amm) as all_amount				   	
			</selectClause> 
			<tableClause> #if($criteria.exactDate) table(PKG_STATISTICS.getStatisticsTablePipe(trunc(sysdate)+(sysdate-trunc(sysdate)), 0)) #else statistic #end t</tableClause>
			<whereClause><![CDATA[
				 1 = 1
				#if($criteria.exactDate)  and 1=1
				#else 
					 #if($criteria.ym) and t.ym = $criteria.ym #end
					 /*to_number(to_char(add_months(sysdate,-1),'yymm'))*/
					 #if($criteria.ym_start) and t.ym >= $criteria.ym_start #end
					 #if($criteria.ym_end) and t.ym <= $criteria.ym_end #end
			    #end				 
				]]>  
			</whereClause> 
			<groupClause>t.ym</groupClause>
    	</operationBinding>
    	
    	
    	
    	
    	<operationBinding operationId="searchContrStatistics" operationType="fetch">
    		<selectClause>   	
    				/* use_nl(ch,ls,p,c) ordered index (ch IDX_LOG_SCH_REC_DATE1) */		
    				o.organization_id,
    			  	o.organization_name,
           			count(1) as call_count   	
			</selectClause> 
			<tableClause>
				call_session_expense ch
			         inner join call_sessions ls  on ch.session_id = ls.session_id
			         inner join v_normalized_contractor_phones p on p.phone=ls.call_phone
			         inner join corporate_clients c on c.corporate_client_id=p.corporate_client_id
			         inner join organizations o on o.organization_id = c.organization_id 
			</tableClause>
			<whereClause><![CDATA[
				 ch.year_month = $criteria.ym and ls.year_month = $criteria.ym
				 and trunc(c.contract_start_date) <= trunc(ls.call_start_date)
				 and trunc(c.contract_end_date) >= trunc(ls.call_start_date)
				 and c.goverment = $criteria.type	
				 #if ($criteria.organization_name)
				 	 #foreach($str in $criteria.organization_name.split(" "))
						and o.organization_name like '%'||'$str'||'%'
					#end
				 #end			
				]]>  
			</whereClause> 
			<groupClause>o.organization_id,o.organization_name</groupClause>
			<orderClause>count(1) desc</orderClause>
    	</operationBinding>
    	
    	
    	
    	<operationBinding operationId="searchNonContrStatistics" operationType="fetch">
    		<selectClause>   	
    				   /* use_nl(ch,cs) ordered index(cs,IDX_CS_SESSION_ID) index (ch IDX_LOG_SCH_REC_DATE1) */
				       o.organization_id,
				       o.organization_name,
				       count(1) as call_count
			</selectClause> 
			<tableClause>
				call_session_expense ch
					inner join call_sessions cs on ch.session_id = cs.session_id
					inner join phone_numbers pn on pn.phone = cs.norm_phone
					inner join organization_depart_to_phones odp on odp.phone_number_id = pn.phone_number_id
					inner join organization_department od on od.org_department_id = odp.org_department_id
					inner join organizations o on o.organization_id = od.organization_id 
			</tableClause>
			<whereClause><![CDATA[
				  ch.year_month = $criteria.ym and cs.year_month = $criteria.ym and 
			      ch.charge > 0 and cs.call_kind = 3 and not exists
			        (select 1 from v_normalized_contractor_phones p where p.phone = cs.call_phone)
			      #if ($criteria.organization_name)
				 	 #foreach($str in $criteria.organization_name.split(" "))
						and o.organization_name like '%'||'$str'||'%'
					#end
				 #end
				]]>  
			</whereClause> 
			<groupClause>o.organization_id, o.organization_name</groupClause>	
			<orderClause>count(1) desc</orderClause>		
    	</operationBinding>
    	
    	
    	<operationBinding operationId="searchOrgDetailStatistics" operationType="fetch">
    		<selectClause>   	
    				   /* use_nl(ch,cs) ordered index(cs,IDX_CS_SESSION_ID) index (ch IDX_LOG_SCH_REC_DATE1) */
		               to_char(trunc(ch.charge_date),'DD/MM/YYYY') as call_date,
		               o.organization_id,
		               o.organization_name,
		               count(1) as call_count,
		               case when to_number(to_char(trunc(ch.charge_date),'D')) = 1 or to_number(to_char(trunc(ch.charge_date),'D')) = 7 then 
				    	1 else 
				    	0 
				   		end as week_day
			</selectClause> 
			<tableClause>
				        call_session_expense ch
				          inner join call_sessions cs on ch.session_id = cs.session_id
				          inner join phone_numbers pn on pn.phone = cs.norm_phone
				          inner join organization_depart_to_phones odp on odp.phone_number_id = pn.phone_number_id
				          inner join organization_department od on od.org_department_id = odp.org_department_id
				          inner join organizations o on o.organization_id = od.organization_id 
			</tableClause>
			<whereClause><![CDATA[
			       ch.year_month = $criteria.ym and cs.year_month = $criteria.ym and 
			       ch.charge > 0 and cs.call_kind = 3 and
			       o.organization_id = $criteria.organization_id
				]]>  
			</whereClause> 
			<groupClause>o.organization_id,o.organization_name,trunc(ch.charge_date)</groupClause>
			<orderClause>trunc(ch.charge_date)</orderClause>
    	</operationBinding>
    	
    </operationBindings>	
</DataSource>